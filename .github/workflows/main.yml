name: CI

on:
  push:
    branches: [ development, production ]
  pull_request:
    branches: [ development, production ]

jobs:
  workflow:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: pnpm-install-v4-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-install-v4-
      - name: Installing dependencies
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6
          run_install: true
      - name: Preparing build environment (push)
        if: github.event_name == 'push'
        run: |
          echo "BUILD_ENV=$(echo ${GITHUB_REF#refs/heads/} | sed 's/development/staging/')" >> $GITHUB_ENV
          echo "DEPLOY_CHANNEL=live" >> $GITHUB_ENV
          echo "DEPLOY_CHANNEL_NAME=live" >> $GITHUB_ENV
      - name: Preparing build environment (pull request)
        if: github.event_name == 'pull_request'
        run: |
          echo "BUILD_ENV=$(echo ${GITHUB_BASE_REF} | sed 's/development/staging/')" >> $GITHUB_ENV
          echo "DEPLOY_CHANNEL=" >> $GITHUB_ENV
          echo "DEPLOY_CHANNEL_NAME=preview" >> $GITHUB_ENV
      - name: Building in '${{ env.BUILD_ENV }}' mode
        run: |
          pnpm run build
          mkdir deploy
          mv public/firebase.json deploy/
          mv public deploy/
          cp .firebaserc deploy/.firebaserc
      - name: Caching deploy directory (for debugging purposes)
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: deploy
      - name: Deploying to '${{ env.BUILD_ENV }}' server on '${{ env.DEPLOY_CHANNEL_NAME }}' channel
        if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.user.login == 'mohatt') }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MOHATT }}
          entryPoint: deploy
          projectId: ${{ env.BUILD_ENV }}
          channelId: ${{ env.DEPLOY_CHANNEL }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
